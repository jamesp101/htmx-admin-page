package pages

import (
	"main/templates/components"
	"strconv"
	"main/templates/components/icons"
)

templ AccountsPage () {
	<!DOCTYPE html>
	<html lang="en" data-theme="bumblebee">
		@components.HeadBase("Accounts")
		<body>
			@components.Shell("Accounts") {
				<div class="container">
					<h1 class="text-3xl font-bold">Accounts </h1>
					<p class="text-xs">Manage Accounts</p>
					<br/>
					<div class="flex justify-between items-center gap-4">
						<form class="">
							<div class="join">
								<input
									name="search"
									type="text"
									value=""
									placeholder="Search"
									class="input input-bordered join-item input-sm md:input-md"
								/>
								<button class="btn join-item btn-sm md:btn-md">
									@icons.Magnifying()
								</button>
							</div>
						</form>
						<button class="btn btn-primary btn-sm md:btn-md">
							@icons.NewAccount()
							New Account
						</button>
					</div>
					@Table()
				</div>
			}
			<dialog id="edit_dialog" class="modal"></dialog>
		</body>
	</html>
}

templ Table () {
	<div class="overflow-x-auto">
		<table class="table">
			@tableHead()
			@tableBody(AccountsSample)
		</table>
		@generatePagination()
	</div>
}

templ tableHead() {
	<thead>
		<tr>
			<th></th>
			<th>
				<button class="btn btn-ghost btn-sm" hx-get="/accounts" hx-vals='{"sort": "name"}'>
					Account Name
				</button>
			</th>
			<th>Account Type</th>
			<th>Account Balance</th>
		</tr>
	</thead>
}

type Account struct {
	Id      string
	Name    string
	Type    string
	Balance float64
}

var AccountsSample = []Account{
	{Id: "1", Name: "Cash", Type: "Asset", Balance: 1000},
	{Id: "2", Name: "Bank", Type: "Asset", Balance: 2000},
	{Id: "3", Name: "Credit Card", Type: "Liability", Balance: 500},
}

templ tableBody(accounts []Account) {
	<tbody>
		for _, account := range accounts {
			<tr hx-get={ "/accounts/" + account.Id }
				hx-target="#edit_dialog"
				hx-swap="innerHtml"
				class="hover cursor-pointer"
				onClick="document.getElementById('edit_dialog').showModal()"
			>
				<td>{ account.Name }</td>
				<td>{ account.Type }</td>
				<td>{ strconv.FormatFloat(account.Balance, 'f', 2, 32) }</td>
				<td></td>
			</tr>
		}
	</tbody>
}

templ AccountInfo (a Account) {
	<div class="modal-box">
		<form method="dialog">
			<button class="btn btn-sm btn-circle btn-ghost absolute right-5 top-5">
				@icons.Close()
			</button>
		</form>
		<h3 class="font-bold text-lg">Account Info</h3>
		<div class="form-control">
			<label class="label">
				<span class="label-text">Account ID:</span>
			</label>
			<p class="">{ a.Id }</p>
		</div>
		<div class="form-control">
			<span class="label-text">Account Name</span>
			<input type="text" name="name" class="input input-sm input-bordered" value={ a.Name }/>
		</div>

		<button class="btn btn-ghost">Edit</button>
	</div>
}

templ generatePagination () {
	<div class="join">
		<button class="join-item btn-sm btn">«</button>
		<button class="join-item btn-sm btn">20 </button>
		<button class="join-item btn-sm btn">21 </button>
		<button class="join-item btn-sm btn btn-primary">22</button>
		<button class="join-item btn-sm btn">23 </button>
		<button class="join-item btn-sm btn">24 </button>
		<button class="join-item btn-sm btn">»</button>
	</div>
}
